import com.rameses.annotations.*;
import com.rameses.util.*;

/*********************************************************************************
* This handles the remote script caching 
*********************************************************************************/
class RemoteScriptExecutor {

    @XConnection('gdx') 
    def mqconn;

    @Service(dynamic=true)
    def dynSvc;

    @Service("RemoteScriptClientService")
    def clientSvc;

    @OnMessage( 'gdx' ) 
    public void onreceive( def req ) {
        println "receiving message " + req;
        if( req instanceof Map ) {

            if(  req.serviceName !=null ) {
                def svc = dynSvc.lookup( "remote/"+req.serviceName );
                def r = null;
                try {
                    r = svc.invokeMethod( req.methodName, req.args );
                }
                catch(e) {
                    r = e;
                }

                def encdata = new Base64Cipher().encode( r ); 
                mqconn.send( encdata, req.tokenid ); 
            }
            else {
                clientSvc.onMessage( req );
            }
        }
        else { 
            clientSvc.notifyStatus( req );
        }
    } 


}
